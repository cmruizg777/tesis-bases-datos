plot(1,1)
2+2
plot(1,2)
hold
plot([1,2],[1,2])
plot({1,2},{1,2})
a=1
a={1,2,3,4}
a=[1,2,3,4]
setwd("~/Data Analisis")
data = load('reducida.csv')
data = read.csv('reducida.csv')
data
entrenamiento
entrenamiento = read.csv('trainning.csv')
entrenamiento
history
history()
train = read.csv('entrenamiento.csv')
View(train)
train = read.csv('entrenamiento.csv')
View(train)
train = read.csv('entrenamiento.csv')
View(train)
train = read.csv('entrenamiento.csv')
trin
tran
train
train = read.csv('entrenamiento.csv')
train
train = read.csv('trainning.csv')
train
train[,-1]
train[,-4]
train[,-5]
View(train)
class(train)
install.packages("dplyr")
install.packages("dplyr")
borrar <- c("valor","categoria")
borrar
View(train)
train2 <- train[ , !(names(train) %in% deleted_columns)]
View(train2)
train2 <- train[ , !(names(train) %in% deleted_columns)]
deleted_columns <- c("id","luz", "nivel_id", "fecha")
train2 <- train[ , !(names(train) %in% deleted_columns)]
View(train2)
summary(trainning)
#se carga la base de datos
train = read.csv('trainning.csv')
#se elimina las columnas innecesarias
deleted_columns <- c("id","luz", "nivel_id", "fecha")
trainning <- train[ , !(names(train) %in% deleted_columns)]
View(trainning)
summary(trainning)
#se normaliza la horas de luz
View(trainning[humedad])
#se normaliza la horas de luz
View(trainning[trainning$humedad])
#se normaliza la horas de luz
View(trainning[trainning$horas_luz])
#se normaliza la horas de luz
View(trainning[trainning$horas_luz<24])
#se normaliza la horas de luz
View(trainning[trainning$horas_luz<24,1])
#se normaliza la horas de luz
View(trainning[trainning$horas_luz<24,1])
hl
#se normaliza la horas de luz
hl = trainning[trainning$horas_luz<24,1]
hl
#se normaliza la horas de luz
trainning[trainning$horas_luz<24,1] = trainning[trainning$horas_luz<24,1]/24
View(trainning)
summary(trainning)
#se normaliza la horas de luz
hmax = 24;
hmin = 0;
trainning[trainning$horas_luz<24,1] = (trainning[trainning$horas_luz<24,1]-hmin)/(hmax-hmin)
#se normaliza la temperatura
tmax= 30;
tmin = 15;
trainning[trainning$temperatura<30,2] = (trainning[trainning$temperatura<tmax,2]-tmin)/(tmax-tmin)
View(trainning)
#se normaliza la humedad relativa
hum_max= 100;
hum_min = 50;
trainning[trainning$humedad<100,2] = (trainning[trainning$temperatura<hum_max,2]-hum_min)/(hum_max-hum_min)
View(trainning)
#se carga la base de datos
train = read.csv('trainning.csv')
#se elimina las columnas innecesarias
deleted_columns <- c("id","luz", "nivel_id", "fecha")
trainning <- train[ , !(names(train) %in% deleted_columns)]
View(trainning)
summary(trainning)
#se normaliza la horas de luz
hmax = 24;
hmin = 0;
trainning[trainning$horas_luz<24,1] = (trainning[trainning$horas_luz<24,1]-hmin)/(hmax-hmin)
View(trainning)
#se normaliza la temperatura
tmax= 30;
tmin = 15;
trainning[trainning$temperatura<30,2] = (trainning[trainning$temperatura<tmax,2]-tmin)/(tmax-tmin)
View(trainning)
#se normaliza la humedad relativa
hum_max= 100;
hum_min = 50;
trainning[trainning$humedad<100,3] = (trainning[trainning$temperatura<hum_max,3]-hum_min)/(hum_max-hum_min)
View(trainning)
#se carga la base de datos
train = read.csv('trainning.csv')
#se elimina las columnas innecesarias
deleted_columns <- c("id","luz", "nivel_id", "fecha")
trainning <- train[ , !(names(train) %in% deleted_columns)]
View(trainning)
summary(trainning)
#se normaliza la horas de luz
hmax = 24;
hmin = 0;
trainning[trainning$horas_luz<24,1] = (trainning[trainning$horas_luz<24,1]-hmin)/(hmax-hmin)
View(trainning)
#se normaliza la temperatura
tmax= 30;
tmin = 15;
trainning[trainning$temperatura<30,2] = (trainning[trainning$temperatura<tmax,2]-tmin)/(tmax-tmin)
View(trainning)
#se normaliza la humedad relativa
hum_max= 100;
hum_min = 50;
trainning[trainning$humedad<100,3] = (trainning[trainning$temperatura<hum_max,3]-hum_min)/(hum_max-hum_min)
View(trainning)
#se normaliza la humedad suelo
hums_max= 1024;
hums_min = 0;
trainning[trainning$humedad_suelo<1024, 4] = (trainning[trainning$humedad_suelo<1024, 4]-hums_min)/(hums_max-hums_min)
View(trainning)
#se carga la base de datos
train = read.csv('trainning.csv')
#se elimina las columnas innecesarias
deleted_columns <- c("id","luz", "nivel_id", "fecha")
trainning <- train[ , !(names(train) %in% deleted_columns)]
View(trainning)
summary(trainning)
#se normaliza la horas de luz
hmax = 24;
hmin = 0;
trainning[trainning$horas_luz<24,1] = round((trainning[trainning$horas_luz<24,1]-hmin)/(hmax-hmin),2)
View(trainning)
#se normaliza la temperatura
tmax= 30;
tmin = 15;
trainning[trainning$temperatura<30,2] = round((trainning[trainning$temperatura<tmax,2]-tmin)/(tmax-tmin),2)
View(trainning)
#se normaliza la humedad relativa
hum_max= 100;
hum_min = 50;
trainning[trainning$humedad<100,3] = round((trainning[trainning$temperatura<hum_max,3]-hum_min)/(hum_max-hum_min),2)
View(trainning)
#se normaliza la humedad suelo
hums_max= 1024;
hums_min = 0;
trainning[trainning$humedad_suelo<1024, 4] = round((trainning[trainning$humedad_suelo<1024, 4]-hums_min)/(hums_max-hums_min),2)
View(trainning)
#guardando los datos en un nuevo archivo
write.csv(trainning, 'normalized.csv', row.names = FALSE)
#eliminando filas duplicadas
trainning = train[!duplicated(trainning), ]
#guardando los datos en un nuevo archivo
write.csv(trainning, 'normalized.csv', row.names = FALSE)
#se carga la base de datos
train = read.csv('trainning.csv')
#se elimina las columnas innecesarias
deleted_columns <- c("id","luz", "nivel_id", "fecha")
trainning <- train[ , !(names(train) %in% deleted_columns)]
View(trainning)
summary(trainning)
#se normaliza la horas de luz
hmax = 24;
hmin = 0;
trainning[trainning$horas_luz<24,1] = round((trainning[trainning$horas_luz<24,1]-hmin)/(hmax-hmin),2)
View(trainning)
#se normaliza la temperatura
tmax= 30;
tmin = 15;
trainning[trainning$temperatura<30,2] = round((trainning[trainning$temperatura<tmax,2]-tmin)/(tmax-tmin),2)
View(trainning)
#se normaliza la humedad relativa
hum_max= 100;
hum_min = 50;
trainning[trainning$humedad<100,3] = round((trainning[trainning$temperatura<hum_max,3]-hum_min)/(hum_max-hum_min),2)
View(trainning)
#se normaliza la humedad suelo
hums_max= 1024;
hums_min = 0;
trainning[trainning$humedad_suelo<1024, 4] = round((trainning[trainning$humedad_suelo<1024, 4]-hums_min)/(hums_max-hums_min),2)
View(trainning)
#eliminando filas duplicadas
trainning = train[!duplicated(trainning), ]
#se carga la base de datos
train = read.csv('trainning.csv')
#se elimina las columnas innecesarias
deleted_columns <- c("id","luz", "nivel_id", "fecha")
trainning <- train[ , !(names(train) %in% deleted_columns)]
View(trainning)
summary(trainning)
#se normaliza la horas de luz
hmax = 24;
hmin = 0;
trainning[trainning$horas_luz<24,1] = round((trainning[trainning$horas_luz<24,1]-hmin)/(hmax-hmin),2)
View(trainning)
#se normaliza la temperatura
tmax= 30;
tmin = 15;
trainning[trainning$temperatura<30,2] = round((trainning[trainning$temperatura<tmax,2]-tmin)/(tmax-tmin),2)
View(trainning)
#se normaliza la humedad relativa
hum_max= 100;
hum_min = 50;
trainning[trainning$humedad<100,3] = round((trainning[trainning$temperatura<hum_max,3]-hum_min)/(hum_max-hum_min),2)
View(trainning)
#se normaliza la humedad suelo
hums_max= 1024;
hums_min = 0;
trainning[trainning$humedad_suelo<1024, 4] = round((trainning[trainning$humedad_suelo<1024, 4]-hums_min)/(hums_max-hums_min),2)
View(trainning)
#eliminando filas duplicadas
trainning = trainning[!duplicated(trainning), ]
#guardando los datos en un nuevo archivo
write.csv(trainning, 'normalized.csv', row.names = FALSE)
trainning
View(trainning)
#se carga la base de datos
train = read.csv('trainning.csv')
#se elimina las columnas innecesarias
deleted_columns <- c("id","luz", "nivel_id", "fecha")
trainning <- train[ , !(names(train) %in% deleted_columns)]
View(trainning)
summary(trainning)
#se normaliza la horas de luz
hmax = 24;
hmin = 0;
trainning[trainning$horas_luz<24,1] = round((trainning[trainning$horas_luz<24,1]-hmin)/(hmax-hmin),2)
View(trainning)
#se normaliza la temperatura
tmax= 30;
tmin = 0;
trainning[trainning$temperatura<30,2] = round((trainning[trainning$temperatura<tmax,2]-tmin)/(tmax-tmin),2)
View(trainning)
#se normaliza la humedad relativa
hum_max= 100;
hum_min = 0;
trainning[trainning$humedad<100,3] = round((trainning[trainning$temperatura<hum_max,3]-hum_min)/(hum_max-hum_min),2)
View(trainning)
#se normaliza la humedad suelo
hums_max= 1024;
hums_min = 0;
trainning[trainning$humedad_suelo<1024, 4] = round((trainning[trainning$humedad_suelo<1024, 4]-hums_min)/(hums_max-hums_min),2)
View(trainning)
#eliminando filas duplicadas
trainning = trainning[!duplicated(trainning), ]
#guardando los datos en un nuevo archivo
write.csv(trainning, 'normalized.csv', row.names = FALSE)
View(trainning)
#se carga la base de datos
train = read.csv('trainning.csv')
#se elimina las columnas innecesarias
deleted_columns <- c("id","luz", "nivel_id", "fecha")
trainning <- train[ , !(names(train) %in% deleted_columns)]
summary(trainning)
library(caret)
process <- preProcess(as.data.frame(trainning), method=c("range"))
library(caret)
trainning[trainning$horas_luz<24,1] = round((trainning[trainning$horas_luz<24,1]-hmin)/(hmax-hmin),2)library(caret)
process <- preProcess(as.data.frame(data), method=c("range"))
norm_scale <- predict(process, as.data.frame(data))
install.packages("caret")
install.packages("tibble")
